import{r as i,u as D,i as K,h as _,j as w,c as r,a as t,t as m,w as c,b as y,v as L,n as $,F as b,k as O,l as x,o as u,m as P,p as F}from"./index-Cs94QClR.js";const I={id:"todoListPage",class:"bg-half"},j=t("h1",null,[t("a",{href:"#"},"ONLINE TODO LIST")],-1),q={class:"todo_sm"},J={href:"#"},R={class:"container todoListPage vhContainer"},G={class:"todoList_Content"},H={class:"inputBox"},Q=t("i",{class:"fa fa-plus"},null,-1),W=[Q],X={class:"todoList_list"},Y={class:"todoList_tab"},Z={class:"todoList_items"},tt={class:"todoList_item"},et={key:0},ot=["onKeyup"],nt=["onClick"],st={class:"todoList_label"},at=["onUpdate:modelValue","onChange"],lt=["onClick"],it=t("i",{class:"fa-solid fa-pen-to-square fa-lg"},null,-1),rt=[it],ct=["onClick"],ut=t("i",{class:"fa-solid fa-trash-can fa-lg"},null,-1),dt=[ut],vt={class:"todoList_statistics"},ht={key:0},_t={key:1},p="https://todolist-api.hexschool.io",kt={__name:"TodoListView",setup(pt){const s=i({nickname:"",uid:"",token:""}),C=D();K(async()=>{const e=document.cookie.replace(/(?:(?:^|.*;\s*)customTodoToken\s*\=\s*([^;]*).*$)|^.*$/,"$1");if(e)try{const o=await _.get(`${p}/users/checkout`,{headers:{Authorization:e}});s.value=o.data,s.value.token=e,console.log("登入成功:",s.value),f()}catch(o){console.error("用戶驗證失敗:",o),document.cookie="customTodoToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;",C.push("/login")}else window.location.href="/login"});async function z(){try{s.value={nickname:"",uid:"",token:""},alert("您已登出"),C.push("/login")}catch(e){console.error("登出失敗:",e)}}const l=i([]),k=i(""),d=i("all"),v=i(null),h=i("");i("");const V=w(()=>d.value==="todo"?l.value.filter(e=>!e.status):d.value==="done"?l.value.filter(e=>e.status):l.value),A=w(()=>l.value.filter(e=>!e.status).length),g=e=>{d.value=e};async function f(){try{const{data:e}=await _.get(`${p}/todos`,{headers:{Authorization:`${s.value.token}`}});l.value=e.data}catch(e){console.error("取得待辦事項失敗:",e)}}async function E(){var e;try{const o=k.value.trim();if(o.length===0)return alert("Todo內容不能為空白");if(!s.value.token)return alert("未獲得授權，請重新登入");await _.post(`${p}/todos`,{content:o},{headers:{Authorization:` ${s.value.token}`}}),k.value="",f()}catch(o){console.error("新增待辦事項失敗:",((e=o.response)==null?void 0:e.data)||o.message),alert("新增待辦事項失敗，請檢查輸入內容或重新登入")}}async function U(e){try{await _.patch(`${p}/todos/${e.id}/toggle`,{},{headers:{Authorization:`${s.value.token}`}}),f()}catch(o){console.error("切換狀態失敗:",o)}}async function B(e){try{await _.delete(`${p}/todos/${e.id}`,{headers:{Authorization:`${s.value.token}`}}),f()}catch(o){console.error("刪除待辦事項失敗:",o)}}function M(e){v.value=e,h.value=e.content,e.content}function N(){v.value=null,h.value=""}async function T(e){try{if(e.content===h.value){v.value=null;return}await _.put(`${p}/todos/${e.id}`,{content:h.value},{headers:{Authorization:`${s.value.token}`}}),v.value=null,f()}catch(o){console.error("保存編輯失敗:",o)}}function S(e){return v.value&&v.value.id===e.id}return(e,o)=>(u(),r("div",I,[t("nav",null,[j,t("ul",null,[t("li",q,[t("a",J,[t("span",null,m(s.value.nickname)+"的代辦",1)])]),t("li",null,[t("a",{href:"#loginPage",onClick:c(z,["prevent"])},"登出")])])]),t("div",R,[t("div",G,[t("div",H,[y(t("input",{type:"text",placeholder:"請輸入待辦事項","onUpdate:modelValue":o[0]||(o[0]=n=>k.value=n)},null,512),[[L,k.value]]),t("a",{href:"#",onClick:c(E,["prevent"])},W)]),t("div",X,[t("ul",Y,[t("li",null,[t("a",{href:"#",class:$({active:d.value==="all"}),onClick:o[1]||(o[1]=c(n=>g("all"),["prevent"]))},"全部",2)]),t("li",null,[t("a",{href:"#",class:$({active:d.value==="todo"}),onClick:o[2]||(o[2]=c(n=>g("todo"),["prevent"]))},"待完成",2)]),t("li",null,[t("a",{href:"#",class:$({active:d.value==="done"}),onClick:o[3]||(o[3]=c(n=>g("done"),["prevent"]))},"已完成",2)])]),t("div",Z,[t("ul",tt,[(u(!0),r(b,null,O(V.value,n=>(u(),r("li",{key:n.id},[S(n)?(u(),r("div",et,[y(t("input",{class:"inputEditing","onUpdate:modelValue":o[4]||(o[4]=a=>h.value=a),onKeyup:P(a=>T(n),["enter"])},null,40,ot),[[L,h.value]]),t("button",{class:"btn",onClick:a=>T(n)},"保存",8,nt),t("button",{class:"btn",onClick:N},"取消")])):(u(),r(b,{key:1},[t("label",st,[y(t("input",{class:"todoList_input",type:"checkbox","onUpdate:modelValue":a=>n.status=a,onChange:a=>U(n)},null,40,at),[[F,n.status]]),t("span",null,m(n.content),1)]),t("a",{href:"#",onClick:c(a=>M(n),["prevent"])},rt,8,lt),t("a",{href:"#",onClick:c(a=>B(n),["prevent"])},dt,8,ct)],64))]))),128))]),t("div",vt,[l.value.length===0?(u(),r("p",ht,"目前尚無待辦事項")):x("",!0),l.value.length>0?(u(),r("p",_t,m(A.value)+" 個未完成項目",1)):x("",!0)])])])])])]))}};export{kt as default};
